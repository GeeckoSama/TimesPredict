name: 🚀 Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: 🏷️ Get the version
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
    
    - name: 📋 Generate changelog
      id: changelog
      run: |
        # Simple changelog generation
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes in ${{ steps.get_version.outputs.VERSION }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --oneline --format="- %s" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: 🎉 Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: TimesPredict ${{ steps.get_version.outputs.VERSION }}
        body: |
          # TimesPredict ${{ steps.get_version.outputs.VERSION }}
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ```bash
          git clone https://github.com/YOUR_USERNAME/TimesPredict.git
          cd TimesPredict
          python install_and_test.py
          ```
          
          ## What's Changed
          See the changelog above for detailed changes.
          
          ## Full Changelog
          **Full Changelog**: https://github.com/YOUR_USERNAME/TimesPredict/compare/v0.1.0...${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}

  docker-build:
    runs-on: ubuntu-latest
    if: contains(github.ref, 'refs/tags/v')
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🏷️ Extract version
      id: extract_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
    
    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: 📝 Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM python:3.11-slim
        
        WORKDIR /app
        
        # Install system dependencies
        RUN apt-get update && apt-get install -y \
            gcc \
            g++ \
            && rm -rf /var/lib/apt/lists/*
        
        # Copy requirements and install Python dependencies
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        
        # Copy source code
        COPY src/ ./src/
        COPY data/ ./data/
        COPY install_and_test.py .
        COPY README.md .
        
        # Set Python path
        ENV PYTHONPATH=/app/src
        
        # Default command
        CMD ["python", "-c", "print('TimesPredict Docker container ready!')"]
        EOF
    
    - name: 🏗️ Build Docker image
      run: |
        docker build -t timesprdict:${{ steps.extract_version.outputs.VERSION }} .
        docker build -t timespredict:latest .
      
    # Uncomment if you want to push to a container registry
    # - name: 🚀 Push to registry
    #   run: |
    #     echo "Would push docker images here"
    #     # docker push timespredict:${{ steps.extract_version.outputs.VERSION }}
    #     # docker push timespredict:latest