#!/usr/bin/env python3
"""
Demo des barres de progression Loto V2
DÃ©monstrateur des nouvelles fonctionnalitÃ©s de progress
"""

import sys
from pathlib import Path
import time
import random

# Ajouter le chemin des modules
sys.path.append(str(Path(__file__).parent))

from modules.progress import ProgressBar, loading_animation, simple_progress


def demo_progress_bar():
    """DÃ©monstration de la barre de progression standard"""
    print("ðŸ”„ Demo ProgressBar Standard")
    
    # Simulation d'une tÃ¢che avec 20 Ã©tapes
    progress = ProgressBar(20, "ðŸ“Š Calcul statistiques")
    
    for i in range(20):
        # Simulation de travail
        time.sleep(0.1)
        
        # Mise Ã  jour description dynamique
        if i < 5:
            progress.set_description("ðŸ“Š Chargement donnÃ©es")
        elif i < 15:
            progress.set_description("ðŸ“Š Analyse frÃ©quences")
        else:
            progress.set_description("ðŸ“Š Sauvegarde")
        
        progress.update(1)
    
    print("âœ… Demo ProgressBar terminÃ©e\n")


def demo_loading_animation():
    """DÃ©monstration des animations de chargement"""
    print("ðŸ”„ Demo Loading Animation")
    
    loading_animation("Initialisation", 1.0)
    loading_animation("PrÃ©paration modÃ¨le", 1.5)
    loading_animation("Sauvegarde", 0.8)
    
    print("âœ… Demo Animation terminÃ©e\n")


def demo_simple_progress():
    """DÃ©monstration de la progress simple"""
    print("ðŸ”„ Demo Simple Progress")
    
    for i in range(11):
        progress_str = simple_progress(i, 10, "ðŸŽ² PrÃ©dictions: ")
        print(f"\r{progress_str}", end="", flush=True)
        time.sleep(0.2)
    
    print("\nâœ… Demo Simple Progress terminÃ©e\n")


def demo_combined_workflow():
    """DÃ©monstration d'un workflow complet avec progress"""
    print("ðŸ”„ Demo Workflow Complet")
    
    # 1. Chargement donnÃ©es avec animation
    loading_animation("Chargement donnÃ©es loto", 1.0)
    
    # 2. Calcul avec barre dÃ©taillÃ©e
    progress = ProgressBar(50, "ðŸ”„ Traitement")
    for i in range(50):
        if i < 10:
            progress.set_description("ðŸ”„ Lecture CSV")
        elif i < 30:
            progress.set_description("ðŸ”„ Calcul frÃ©quences")
        elif i < 45:
            progress.set_description("ðŸ”„ Analyse statistique")
        else:
            progress.set_description("ðŸ”„ Finalisation")
        
        # Simulation travail variable
        time.sleep(random.uniform(0.02, 0.08))
        progress.update(1)
    
    # 3. Sauvegarde avec animation
    loading_animation("Sauvegarde rÃ©sultats", 0.8)
    
    print("ðŸŽ¯ RÃ©sultat: 5616 tirages analysÃ©s")
    print("âœ… Workflow terminÃ© avec succÃ¨s\n")


def main():
    """Lance toutes les dÃ©mos"""
    print("=" * 50)
    print("ðŸŽ¯ DEMO BARRES DE PROGRESSION LOTO V2")
    print("=" * 50)
    print()
    
    # Lancer toutes les dÃ©mos
    demo_progress_bar()
    demo_loading_animation()
    demo_simple_progress()
    demo_combined_workflow()
    
    print("ðŸŽ‰ Toutes les dÃ©mos terminÃ©es!")


if __name__ == "__main__":
    main()